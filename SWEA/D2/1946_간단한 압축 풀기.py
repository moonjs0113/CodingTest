"""
1946. 간단한 압축 풀기
원본 문서는 너비가 10인 여러 줄의 문자열로 이루어져 있다.
문자열은 마지막 줄을 제외하고 빈 공간 없이 알파벳으로 채워져 있고 마지막 줄은 왼쪽부터 채워져 있다.
이 문서를 압축한 문서는 알파벳과 그 알파벳의 연속된 개수로 이루어진 쌍들이 나열되어 있다. (예 : A 5    AAAAA)
압축된 문서를 입력 받아 원본 문서를 만드는 프로그램을 작성하시오.

[제약사항]
1. 압축된 문서의 알파벳과 숫자 쌍의 개수 N은 1이상 10이하의 정수이다. (1 ≤ N ≤ 10)
2. 주어지는 알파벳 Ci는 A~Z의 대문자이다. (i는 줄의 번호로 1~N까지의 수)
3. 알파벳의 연속된 개수로 주어지는 수 Ki는 1이상 20이하의 정수이다. (1 ≤ Ki ≤ 20, i는 줄의 번호로 1~N까지의 수)
4. 원본 문서의 너비는 10으로 고정이다.
"""
for case in range(0, int(input())):
  docs = ""
  for _ in range(0, int(input())):
    a, n = map(str,input().split())
    docs += a * int(n)
  result = "\n".join([docs[i:i+10] for i in range(0, len(docs), 10)])
  print(f'#{case+1}\n{result}')
